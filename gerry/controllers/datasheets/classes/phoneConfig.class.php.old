<?php

class phoneConfig extends sheetConfig 
{
	private static $preconditions;
	private static $data;
	private static $compare = false;
	
	public static function startDataSheetBuilding($preconditions, $data, $tab, $device_id, $kind, $table = '')
	{
		if($kind == 'compare')
		{
			self::$compare = true;
		}
		self::$preconditions = $preconditions;
		self::$data = $data;
		if(empty($table))
		{
			Dobber::ReportNotice($tab);
			$sheet = self::setupDataSheet(self::$sheet, $tab, $device_id);
			return $sheet;
		}
		Dobber::ReportNotice($table);
		$sheet = self::decideinput(self::$sheet[$tab][$table], $tab, $device_id);
		return $sheet;
	}
	
	
	public static function setupDataSheet($build_array, $tab, $device_id)
	{
		
		if(isset($tab))
		{
		
			foreach(self::$sheet as $tabtemp => $tabdata)
			{
				$sheet[$tabtemp] = $tabtemp;
			}
			$sheet[$tab] = self::buildtab($build_array[$tab], $device_id);
		}
		else
		{
			
			foreach($build_array as $tab => $tabdata)
			{
				$sheet[$tab] = self::buildtab($tabdata, $device_id);
			}
		}
		return $sheet;
	}
	
	private static function buildtab($tabdata, $device_id)
	{
		foreach($tabdata as $frame => $input)
		{
			$sheet[$frame]  = self::decideinput($input, $frame, $device_id);
		}
		return $sheet;
	}
	
	private static function decideinput($input, $frame, $device_id)
	{
		
		if(is_array($input))
		{
			$sheet = self::buildarrayinput($input, $frame, $device_id);
		}
		else
		{
			$sheet[$input] = self::buildinput($input, $device_id);
		}
		return $sheet;
	}
	
	private static function buildinput($input, $device_id)
	{
		if(class_exists($input))
		{
			$object = new $input();
			$fields = $object->toArray();
			if(isset(self::$data[$input.'_type']))
			{
				foreach($fields as $field => $value)
				{
					if(is_array(self::$data[$input.'_type']))
					{
						foreach(self::$data[$input.'_type'] as $key => $value)
						{
							$object->$key = $value;
						}
					}
				}
			}
			$object_data = $object->__toArray();
			$sheet = sheetBuilder::buildForm(self::$preconditions, $fields, '', $object_data, $input, $device_id, self::$compare);
			return $sheet;
		}
		return false;
	}
	
	private static function buildarrayinput($input, $frame, $device_id)
	{
		
		$sheet = array();
		if(class_exists($frame))
		{
			$object = new $frame();
			$fields = $object->toArray();
			if(isset(self::$data[$frame.'_type']))
			{
				foreach($fields as $field => $value)
				{
					if(is_array(self::$data[$frame.'_type']))
					{
						foreach(self::$data[$frame.'_type'] as $key => $value)
						{
							$object->$key = $value;
						}
					}
				}
			}
			$object_data = $object->__toArray();
			$tmp = sheetBuilder::buildForm(self::$preconditions, $fields, '', $object_data, $frame, $device_id, self::$compare);
			foreach($input as $input_name => $input_field)
			{
				if(is_array($input_field))
				{
					$array = '';
					$tmp_label = '<label for="'.$input_name.'"><phrase id='.$input_name.'/></label>';
					$tmp_input = '';
					foreach($input_field as $input => $fields)
					{
						if(isset($tmp[$fields]['input']))
						{
							if(!is_array($fields))
							{
								 $tmp_input[] = $tmp[$fields]['input'];
							}
						}
					}
					$input_tmp = implode('*', $tmp_input);
					$sheet[$input_name][$input_name] = array('label' => $tmp_label, 'input' => $input_tmp);
				}
				else
				{
					if(!class_exists($input_field))
					{
						if(isset($tmp[$input_field]['label']))
						{
							$sheet[$input_field]['label'] = array('label' =>$tmp[$input_field]['label']);
						}
						if(isset($tmp[$input_field]['input']))
						{
							$sheet[$input_field]['input'] = array('input'  => $tmp[$input_field]['input']);
						}
						
					}
					else
					{
						$sub_object = new $input_field();
						$fields = $sub_object->toArray();
						if(isset(self::$data[$input_field.'_type']))
						{
							foreach($fields as $field => $value)
							{
								if(is_array(self::$data[$input_field.'_type']))
								{
									foreach(self::$data[$input_field.'_type'] as $key => $value)
									{
										$sub_object->$key = $value;
									}
								}
							}
						}
						$object_data = $sub_object->__toArray();
						$sheet[$input_field] = sheetBuilder::buildForm(self::$preconditions, $fields, '', $object_data, $input_field, $device_id, self::$compare);
					}
				}
			}
		}
		else
		{
			foreach($input as $form)
			{
				$sheet[$form] = self::buildinput($form, $device_id);
			}
		}
		return $sheet;
	}
	
}
?>